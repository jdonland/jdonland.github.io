---
title: "Roller Derby Home Team Advantage"
date: "2023-03-13"
description: ""
execute: 
   warning: false
   message: false
filters:
   - lightbox
lightbox: auto
format:
  html:
    code-fold: true
draft: true
---

```{r}
#| label: setup
#| include: false
library(readr)
library(tidyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(kableExtra)
library(ggpmisc)
```

## Introduction

Home team advantage is the tendency for sports teams to win more often when they are the home rather than the visiting team.

In their 2014 article [New Insights Involving the Home Team Advantage](https://www.sfu.ca/~tswartz/papers/hca.pdf), Tim B. Swartz and Adriano Arce investigated home team advantage in the NHL and NBA. Using [FlatTrackStats](http://flattrackstats.com/)' [dataset](https://www.kaggle.com/datasets/thefringthing/flat-track-roller-derby-dataset), we can trace their methodology to learn about home team advantage in women's flat track roller derby.

## Preparing the Data

In tournaments, "home" and "visitor" are assigned arbitrarily, so we'll filter out tournament bouts. Let's also add columns for the home margin (the difference between the home team's score and the visitors' score) and an indicator for whether the home team won.

```{r}
read_csv("flattrackstats_bouts_2022-03-26.csv.zip") |>
  filter(is.na(tournamentID)) |>
  drop_na(homeScore, visitorScore) |>
  mutate(home_margin = homeScore - visitorScore,
         home_victory = homeScore > visitorScore) ->
  bouts

bouts |>
  sample_n(15) |>
  kbl()
```

## Scores

First we can look at the empirical distribution of scores, both in general and by venue.

::: panel-tabset

### Scores

```{r}
bouts |>
  pivot_longer(cols = c(homeScore, visitorScore), 
               names_to = "venue",
               values_to = "score") |>
  mutate(cumulative_score = cume_dist(score)) |>
  ggplot() +
  aes(x = score, y = cumulative_score) +
  geom_line(size = 2, alpha = 0.75) +
  scale_y_continuous(labels = scales::label_percent(),
                     limits = c(0, NA),
                     expand = c(0 ,0)) +
  scale_x_continuous(expand = c(0, 0), limits = c(0, NA), n.breaks = 10) +
  labs(x = "Score", y = NULL, title = "Distribution of Scores") +
  theme_bw()
```

### Scores by Venue
```{r}
#| warning: false
bouts |>
  pivot_longer(cols = c(homeScore, visitorScore), 
               names_to = "venue",
               values_to = "score") |>
  select(score, venue) |>
  mutate(venue = case_match(venue, 
                            "homeScore" ~ "home", 
                            "visitorScore" ~ "visitor")) |>
  mutate(cumulative_score = cume_dist(score), .by = venue) |>
  ggplot() +
  aes(x = score, y = cumulative_score, color = venue) +
  geom_line(size = 2, alpha = 0.75) +
  scale_y_continuous(labels = scales::label_percent(),
                     limits = c(0, NA),
                     expand = c(0 ,0)) +
  scale_x_continuous(limits = c(0, NA), n.breaks = 10) +
  labs(title = "Distribution of Scores by Venue",
       x = "Score",
       y = NULL,
       color = "Venue") +
  theme_bw()
```

### Total Score
```{r}
#| warning: false
bouts |>
  mutate(total_score = homeScore + visitorScore,
         cumulative_total_score = cume_dist(total_score)) |>
  ggplot() +
  aes(x = total_score, y = cumulative_total_score) +
  geom_line(size = 2, alpha = 0.75) +
  scale_y_continuous(labels = scales::label_percent(),
                     limits = c(0, NA),
                     expand = c(0 ,0)) +
  labs(title = "Distribution of Total Scores",
       x = "Total Score",
       y = NULL) +
  theme_bw()
```
:::

```{r}
#| include: false
bouts |> pull(homeScore)    |> mean(na.rm = T) |> round() -> mean_home
bouts |> pull(visitorScore) |> mean(na.rm = T) |> round() -> mean_away
c(bouts$homeScore, bouts$visitorScore) |> mean(na.rm = T) |> round() -> mean_score
bouts |> pull(home_margin)  |> mean(na.rm = T) |> round() -> mean_margin
```

The sample mean score is about `r mean_score` points. When we condition by venue (i.e. home vs away), the means are `r mean_home` and `r mean_away`, for a difference of `r mean_home - mean_away` points. It's clear that the home team achieves a higher score on average.

## Home Margin

Rather than settle for an average difference^[Expectation is linear, so the difference of averages is the average difference.], let's see the whole distribution of differences^[The properties of this distribution might contribute to a good measure of how prone a given sports league is to lopsided "blowouts".]:

### Distribution of Home Margin
```{r}
#| warning: false
bouts |> 
  ggplot(aes(x = home_margin)) +
  geom_histogram(binwidth = 1) +
  scale_x_continuous(limits = c(-500, 500)) +
  geom_vline(xintercept = 0, colour = "white", linetype = "dotted") +
  stat_summary(fun = "mean", 
               geom = "vline", 
               linewidth = 1.25,
               aes(x = 0, y = home_margin, xintercept = stat(y))) +
  labs(title = "Distribution of Home Margin", x = "Home Margin", y = "Count")
```

## Winning Proportion

What proportion of bouts are won by the home team? 

```{r}
bouts |> pull(home_victory) |> mean()
```

So the home team wins about `r bouts |> pull(home_victory) |> mean() * 100`% of bouts and scores 24 more points than the visitors on average.

## Trends by Year

Our data include dates, so we can see how these quantities have been changing over time.

::: panel-tabset
### Total Score
```{r}
bouts |>
  group_by(year = floor_date(date, unit = "year")) |>
  summarize(tpt = mean(homeScore + visitorScore)) |>
  ggplot(aes(x = year, y = tpt)) +
  geom_point() +
  geom_line() +
  geom_smooth(method = "lm") +
  labs(title= "Total Score by Year", y = "Average Total Points", x = "Year")
```

### Home Margin
```{r}
bouts |>
  group_by(year = floor_date(date, unit = "year")) |>
  summarize(hta = mean(home_margin)) |>
  ggplot(aes(x = year, y = hta)) +
  geom_point() +
  geom_line() +
  geom_smooth(method = "lm") +
  labs(title = "Average Home Margin by Year", 
       y = "Average Home Margin", 
       x = "Year")
```

### Winning Proportion
```{r}
bouts |>
  group_by(year = floor_date(date, unit = "year")) |>
  summarize(win = sum(home_victory)/n()) |>
  ggplot(aes(x = year, y = win)) +
  geom_point() +
  geom_line() +
  geom_smooth(method = "lm") +
  labs(title = "Home Win Rate by Year", y = "Home Win Rate", x = "Year")
```
:::

The average total score and home margin seem to be increasing over time, but there's no clear trend in proportion of home team victories.

## Home Margin, Total Points

Swartz and Arce regress average home margin on average total score, so let's do that:

::: panel-tabset
### Home Margin by Total Points
```{r}
bouts |>
  group_by(year = floor_date(date, unit = "year")) |>
  summarize(hta = mean(home_margin),
            tpt = mean(homeScore + visitorScore)) |>
  ggplot(aes(x = tpt, y = hta)) +
  geom_point() +
  geom_text(hjust = -0.5, size = 2.5, aes(label = year(year))) +
  stat_poly_line() +
  stat_poly_eq() +
  labs(title = "Average Home Margin by Average Total Score", 
       x = "Average Total Score", 
       y = "Average Home Margin")
```

### HTA ~ TPT
```{r}
bouts |>
  group_by(year = floor_date(date, unit = "year")) |>
  summarize(hta = mean(home_margin),
            tpt = mean(homeScore + visitorScore)) |>
  lm(hta ~ tpt, data = _) |>
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_smooth(method = "lm") +
    labs(y = "Standardized Residuals", x = "Predicted HTA")
```
:::

Although it seems plausible that average home margins and total scores would be linearly related, for our data the regression yields rather poor results. In particular, our residuals don't look very random. A quadratic regression might address that specific worry, but the fit wouldn't be any better relative to the added complexity of the model.^[R_adj^2 = 0.54.]

## Team Effects

(Explanation about why the data suck too much to do this part.)

## References

-   [New Insights Involving the Home Team Advantage (Swartz & Arce, 2014)](https://www.sfu.ca/~tswartz/papers/hca.pdf)