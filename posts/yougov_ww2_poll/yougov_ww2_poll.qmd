---
title: ""
date: "2024-06-06"
date-modified: now
date-format: long
image: violin_plot_thumbnail.png
description: "Recreating a YouGov Data Graphic with ggplot2"
filters:
   - lightbox
lightbox: auto
code-fold: true
format:
  html:
    fig-width: 8.9
    fig-height: 7.67
draft: true
---

```{r}
#| label: libraries
#| include: false

library(tidyverse)
library(ggtext)
```

## Introduction

YouGov published this data graphic showing which country people in Great Britain, the United States, France, and Germany today believe most contributed to Germany's defeat in the Second World War, compared to the answers given by the French at end of the war.

![Original](original.png)

Let's use `ggplot2` to recreate it as closely as possible.

## Data

We can read off the data from the original graphic and store it in "long" format.

```{r}
#| label: data
#| message: false

"year,country,combatant,value
2024,Great Britain,United States,20
2024,Great Britain,Soviet Union,15
2024,Great Britain,United Kingdom,39
2024,Great Britain,Another country,1
2024,Great Britain,Don't know,25
2024,United States,United States,59
2024,United States,Soviet Union,13
2024,United States,United Kingdom,6
2024,United States,Another country,1
2024,United States,Don't know,21
2024,France,United States,47
2024,France,Soviet Union,17
2024,France,United Kingdom,10
2024,France,Another country,2
2024,France,Don't know,24
2024,Germany,United States,34
2024,Germany,Soviet Union,31
2024,Germany,United Kingdom,6
2024,Germany,Another country,3
2024,Germany,Don't know,27
1945,France,United States,20
1945,France,Soviet Union,57
1945,France,United Kingdom,12
1945,France,The three equally,2
1945,France,Another country/Don't know,9" |>
  read_csv(col_types = "fffn") ->
  yougov_data
```

## Building the Plot

### Basic Structure

The basic structure of YouGov's graphic is a horizontal bar chart faceted by the year of the poll and the nationality of the respondants.

```{r}
yougov_data |>
  mutate(combatant = fct_rev(combatant)) |>
  ggplot(aes(x = value, y = combatant)) +
  geom_col() +
  facet_grid(rows = vars(year), cols = vars(country), scales = "free_y")
```
### Text Part One

Next we'll add the title, subtitle, and caption, and adjust the facet labels.

```{r}
title <- "Britons tend to think that the UK did the most to defeat the Nazis - other countries aren't so sure"
subtitle <- "In your opinion, which country would you say contributed most to the defeat of Germany in World War Two? (%)"

yougov_data |>
  mutate(combatant = fct_rev(combatant)) |>
  ggplot(aes(x = value, y = combatant)) +
  geom_col() +
  facet_grid(rows = vars(year), 
             cols = vars(country),
             scales = "free_y",
             switch = "y",
             labeller = labeller(country = \(x) paste0("According to people in ", x),
                                 year = \(x) paste0("Asked in May ", x, ifelse(x == "2024", "\n(YouGov)", "\n(IFOP)")))) +
  labs(title = title, subtitle = subtitle)
```

### Colours

Let's apply YouGov's colour scheme to the bars using `scale_fill_manual()`.

```{r}
yougov_data |>
  mutate(combatant = fct_rev(combatant)) |>
  ggplot(aes(x = value, y = combatant, fill = country)) +
  geom_col() +
  scale_fill_manual(values = c("#FF412D", "#06A7EE", "#003CAC", "#2A2D35")) +
  facet_grid(rows = vars(year), 
             cols = vars(country),
             scales = "free_y",
             switch = "y",
             labeller = labeller(country = \(x) paste0("According to people in ", x),
                                 year = \(x) paste0("Asked in May ", x, ifelse(x == "2024", "\n(YouGov)", "\n(IFOP)")))) +
  labs(title = title, subtitle = subtitle)
```

### Theme

```{r}
#| warning: false

labeller(
  country = \(x) paste0("According to<br>people in ", 
                        ifelse(x == "United States", "the<br>", ""), 
                        ifelse(x == "Great Britain", "Great<br>Britain", x)),
  year = \(x) paste0("Asked in May ", 
                     x, 
                     ifelse(x == "2024", "\n(YouGov)", "\n(IFOP)"))) ->
  country_labeller

yougov_data |>
  mutate(combatant = fct_rev(combatant)) |>
  mutate(
    .by = year, 
    line_position = as.numeric(factor(combatant, 
                                      levels = unique(combatant))) + 0.5,
    line_position = ifelse(line_position == max(line_position), 
                           NA, 
                           line_position)) |>
  mutate(
    combatant = case_when(
      year == 2024 ~ paste0(combatant, str_dup(" ", 16)),
      TRUE ~ combatant)) |>
  ggplot(aes(x = value, y = combatant, fill = country, label = value)) +
  geom_col() +
  geom_text(
    aes(x = ifelse(value > 14, 0, value),
    colour = ifelse(value > 14, "1", "2")),
    hjust = 0,
    nudge_x = 3,
    nudge_y = 0.05, 
    size = 4) +
  geom_hline(
    aes(yintercept = line_position), 
    color = "white", 
    linewidth = 1.8) +
  scale_x_continuous(expand = expansion(0, 0)) + 
  scale_y_discrete(expand = expansion(0, 0)) +
  scale_fill_manual(values = c("#FF412D", "#06A7EE", "#003CAC", "#2A2D35")) +
  scale_colour_manual(values = c("#FFFFFF", "#000000")) +
  facet_grid(
    rows = vars(year), 
    cols = vars(country),
    scales = "free_y",
    drop = TRUE,
    switch = "y",
    labeller = country_labeller) +

  labs(title = title, subtitle = subtitle) +
  theme(
    legend.position = "none",
    plot.title.position = "plot",
    plot.title = element_textbox_simple(
      size = 18, 
      face = "bold", 
      padding = margin(1, 1, 12, 1)),
    plot.subtitle = element_textbox_simple(padding = margin(1, 1, 20, 1)),
    axis.title = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_text(hjust = 0, size = 10),
    axis.ticks = element_blank(),
    strip.placement = "outside",
    strip.background = element_blank(),
    strip.text = element_textbox_simple(
      width = unit(1.41, "in"),
      height = unit(0.54, "in"),
      hjust = 0,
      size = 10,
      padding = margin(1, 1, 20, 1)),
    strip.text.y = element_text(face = "bold", angle = 90),
    panel.background = element_rect(fill = "#F6F6F6"),
    panel.grid = element_blank(),
    panel.spacing.y = unit(0.5, "in"))
```