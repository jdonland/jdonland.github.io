{
  "hash": "4c2e03d02792c966f0c91590ff81bcca",
  "result": {
    "markdown": "---\ntitle: \"Wordle Scores\"\ndate: \"2023-03-31\"\ndate-modified: now\ndate-format: long\ndescription: \"A wealth of word whimsy.\"\nexecute: \n   warning: false\n   message: false\nfilters:\n   - lightbox\nlightbox: auto\nformat:\n  html:\n    code-fold: false\n---\n\n\n## Introduction\n\nUnless you spent 2022 on the moon, you've heard of [Wordle](https://www.nytimes.com/games/wordle/index.html), but just in case you haven't here's [the story](https://www.protocol.com/bulletins/josh-wardle-wordle-gdc-2022). You get up to six guesses to identify a secret five-letter word. The game tells you whether each of the letters of your guesses appears in the word and, if they do, whether they're in the correct place.\n\n![A typical game of Wordle in progress.](game_in_progress.png){fig-align=\"center\" width=\"500\"}\n\n\n\n\n\n## Data\n\n### My Scores\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nread_csv(\"wordle_scores.csv\", col_types = \"nn-\") |>\n  mutate(source = \"me\", puzzle = row_number()) ->\n  wordle_scores\n\nwordle_scores |>\n  select(-source, -puzzle) |>\n  st(title = \"My Wordle Scores: Summary Statistics\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>My Wordle Scores: Summary Statistics</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Variable </th>\n   <th style=\"text-align:left;\"> N </th>\n   <th style=\"text-align:left;\"> Mean </th>\n   <th style=\"text-align:left;\"> Std. Dev. </th>\n   <th style=\"text-align:left;\"> Min </th>\n   <th style=\"text-align:left;\"> Pctl. 25 </th>\n   <th style=\"text-align:left;\"> Pctl. 75 </th>\n   <th style=\"text-align:left;\"> Max </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> score </td>\n   <td style=\"text-align:left;\"> 331 </td>\n   <td style=\"text-align:left;\"> 4.1 </td>\n   <td style=\"text-align:left;\"> 1.1 </td>\n   <td style=\"text-align:left;\"> 2 </td>\n   <td style=\"text-align:left;\"> 3 </td>\n   <td style=\"text-align:left;\"> 5 </td>\n   <td style=\"text-align:left;\"> 7 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n### Scores from Twitter\n\nI found two data sets of Wordle-related tweets on Kaggle: [this one](https://www.kaggle.com/datasets/vora1011/wordletweets) and [this other one](https://www.kaggle.com/datasets/benhamner/wordle-tweets).\n\nWe can combine them, taking care to remove duplicates. There's surely some bias here, since people are more likely to share their scores on social media when they do well.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nread_csv(\"wordle_tweets_1.zip\", col_types = \"nc--c\") |>\n  rename(puzzle = wordle_id) ->\n  twitter_scores_1\n\nread_csv(\"wordle_tweets_2.zip\", col_types = \"ncc\") |>\n  rename(puzzle = WordleID, tweet_id = ID, tweet_text = Text) ->\n  twitter_scores_2\n\ntwitter_scores_1 |>\n  rbind(twitter_scores_2) |>\n  mutate(score = str_extract(tweet_text, \"Wordle [0-9]{3} ([1-6X])/6\", 1),\n         score = as.numeric(case_match(score, \"X\" ~ \"7\", .default = score)),\n         source = \"twitter\",\n         .keep = \"unused\") |>\n  drop_na() |>\n  distinct(tweet_id, .keep_all = TRUE) |>\n  select(-tweet_id) ->\n  twitter_scores\n\nrm(twitter_scores_1, twitter_scores_2)\n\ntwitter_scores |> \n  select(-source, -puzzle) |>\n  st(title = \"Wordle Scores from Twitter: Summary Statistics\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>Wordle Scores from Twitter: Summary Statistics</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Variable </th>\n   <th style=\"text-align:left;\"> N </th>\n   <th style=\"text-align:left;\"> Mean </th>\n   <th style=\"text-align:left;\"> Std. Dev. </th>\n   <th style=\"text-align:left;\"> Min </th>\n   <th style=\"text-align:left;\"> Pctl. 25 </th>\n   <th style=\"text-align:left;\"> Pctl. 75 </th>\n   <th style=\"text-align:left;\"> Max </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> score </td>\n   <td style=\"text-align:left;\"> 3090345 </td>\n   <td style=\"text-align:left;\"> 4.1 </td>\n   <td style=\"text-align:left;\"> 1.2 </td>\n   <td style=\"text-align:left;\"> 1 </td>\n   <td style=\"text-align:left;\"> 3 </td>\n   <td style=\"text-align:left;\"> 5 </td>\n   <td style=\"text-align:left;\"> 7 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nWe should be careful when thinking about mean scores, since we've coded the \"X\" representing a failed puzzle as a 7. If we filter those out, we get the average number of guesses per *solved* puzzle.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwordle_scores |>\n  full_join(twitter_scores) |>\n  filter(score < 7) |>\n  group_by(source) |>\n  summarize(filtered_mean = mean(score)) |>\n  gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"unkjysrwjt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#unkjysrwjt table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#unkjysrwjt thead, #unkjysrwjt tbody, #unkjysrwjt tfoot, #unkjysrwjt tr, #unkjysrwjt td, #unkjysrwjt th {\n  border-style: none;\n}\n\n#unkjysrwjt p {\n  margin: 0;\n  padding: 0;\n}\n\n#unkjysrwjt .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#unkjysrwjt .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#unkjysrwjt .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#unkjysrwjt .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#unkjysrwjt .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#unkjysrwjt .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#unkjysrwjt .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#unkjysrwjt .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#unkjysrwjt .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#unkjysrwjt .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#unkjysrwjt .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#unkjysrwjt .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#unkjysrwjt .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#unkjysrwjt .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#unkjysrwjt .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#unkjysrwjt .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#unkjysrwjt .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#unkjysrwjt .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#unkjysrwjt .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#unkjysrwjt .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#unkjysrwjt .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#unkjysrwjt .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#unkjysrwjt .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#unkjysrwjt .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#unkjysrwjt .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#unkjysrwjt .gt_left {\n  text-align: left;\n}\n\n#unkjysrwjt .gt_center {\n  text-align: center;\n}\n\n#unkjysrwjt .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#unkjysrwjt .gt_font_normal {\n  font-weight: normal;\n}\n\n#unkjysrwjt .gt_font_bold {\n  font-weight: bold;\n}\n\n#unkjysrwjt .gt_font_italic {\n  font-style: italic;\n}\n\n#unkjysrwjt .gt_super {\n  font-size: 65%;\n}\n\n#unkjysrwjt .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#unkjysrwjt .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#unkjysrwjt .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#unkjysrwjt .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#unkjysrwjt .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#unkjysrwjt .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#unkjysrwjt .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"source\">source</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"filtered_mean\">filtered_mean</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"source\" class=\"gt_row gt_left\">me</td>\n<td headers=\"filtered_mean\" class=\"gt_row gt_right\">4.009202</td></tr>\n    <tr><td headers=\"source\" class=\"gt_row gt_left\">twitter</td>\n<td headers=\"filtered_mean\" class=\"gt_row gt_right\">4.085486</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nLooks like I'm slightly better on average than the people who tweeted their scores, not accounting for any failed puzzles.\n\n## Visualization\n\nFirst let's make one those those trend-and-distribution charts that I love so much. See the post about my [*Jeopardy!* Coryat scores](https://jdonland.github.io/posts/coryat_scores/coryat_scores.html) for another one.\n\nFor a more detailed comparison against the scores from Twitter, we'll look at the cumulative distributions.\n\n::: panel-tabset\n### Line Chart and Histogram\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# main plot\n(wordle_scores |>\n  ggplot() +\n  # aesthetic mapping\n  aes(x = puzzle, y = score) +\n  # visual elements representing the data\n  geom_line(colour = \"#b4b4b4\") +\n  geom_smooth(se = FALSE, colour = \"black\") +\n  geom_point(colour = \"#dc2828\") +\n  # scales\n  scale_y_continuous(limits = c(7.25, 0.75), \n                     breaks = 1:7, \n                     labels = c(1:6, \"X\"), \n                     trans = \"reverse\") +\n  scale_x_continuous(expand = c(0, 0), breaks = NULL) +\n  # labels\n  labs(title = \"My Wordle Scores\",\n       subtitle = \"Trend and distribution\",\n       x = \"\", \n       y = \"Score\") +\n  # theming\n  theme_bw() +\n  theme(panel.grid.minor = element_blank())) |>\n  # add the marginal histogram\n  ggMarginal(type = \"histogram\", \n             margins = \"y\", \n             fill = \"#b4b4b4\",\n             yparams = list(bins = 7, center = 0, binwidth = 1))\n```\n\n::: {.cell-output-display}\n![](wordle_scores_files/figure-html/line-chart-histogram-1.png){width=672}\n:::\n:::\n\n\n### Cumulative Distributions\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# combine the scores from twitter with my own\nwordle_scores |>\n  full_join(twitter_scores) |>\n  # count the occurrences of each possible combination of source and score\n  group_by(source, score) |>\n  count() |>\n  ungroup() |>\n  complete(source, score, fill = list(n = 0)) |>\n  # get the cumulative percentiles for each source\n  arrange(source, score) |>\n  group_by(source) |>\n  mutate(percentile = cumsum(n)/sum(n)) |>\n  # add some helper columns for evil secondary axis trickery later\n  mutate(axis = case_when(percentile == 1 ~ \"n\",\n                          source == \"me\" ~ \"l\",\n                          TRUE ~ \"r\")) |>\n  mutate(\n    r_label_colour  = case_match(axis, \"r\" ~ \"grey30\"),\n    l_label_colour  = case_match(axis, \"l\"  ~ \"grey30\"),\n    r_tick_linetype = case_match(axis, \"r\" ~ \"solid\", .default = \"blank\"),\n    l_tick_linetype = case_match(axis, \"l\"  ~ \"solid\", .default = \"blank\")) -> \n  # need to save this dataframe so we can refer to it within the ggplot call\n  temp\n\ntemp |>\n  ggplot() +\n  aes(x = score, y = percentile, fill = source) +\n  # visual elements representing the data\n  geom_line(linetype = \"dotted\") +\n  geom_point(size = 3, shape = 21, colour = \"black\") +\n  # scales\n  scale_x_continuous(breaks = 1:7, \n                     labels = c(1:6, \"X\"),\n                     expand = c(0, 0)) +\n  ## evil secondary axis trickery part one\n  scale_y_continuous(breaks = temp$percentile,\n                     labels = scales::label_percent(),\n                     limits = c(0, 1),\n                     expand = c(0, 0),\n                     sec.axis = dup_axis()) +\n  scale_fill_manual(values = c(\"#dc2828\", \"white\")) +\n  # labels\n  labs(y = \"\", \n       x = \"Score\", \n       title = \"My Wordle Scores vs Twitter\", \n       subtitle = \"Cumulative distributions\",\n       fill = \"Source\") +\n  # theming\n  theme_bw() +\n  ## evil secondary axis trickery part two\n  theme(panel.grid.minor   = element_blank(),\n        axis.text.y.right  = element_text(colour = temp$r_label_colour),\n        axis.text.y.left   = element_text(colour = temp$l_label_colour),\n        axis.ticks.y.right = element_line(linetype = temp$r_tick_linetype),\n        axis.ticks.y.left  = element_line(linetype = temp$l_tick_linetype))\n```\n\n::: {.cell-output-display}\n![](wordle_scores_files/figure-html/distribution-vs-twitter-1.png){width=672}\n:::\n:::\n\n:::\n\n## Observations\n\nI get fewer puzzles in two or fewer guesses than those who posted their scores to Twitter, but I do better at the harder words. I suspect this is the result of the bias speculated about above; probably there are many people who only tweeted _because_ they got the puzzle in two guesses.\n\n## References & Further Reading\n\n-   [Wordle-solving state of the art: all optimality results so far](https://www.poirrier.ca/notes/wordle-optimal/)\n",
    "supporting": [
      "wordle_scores_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}