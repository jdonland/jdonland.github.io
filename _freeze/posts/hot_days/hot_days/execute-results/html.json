{
  "hash": "1cad34ad13126013515bee777a6cf103",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hot Days\"\ndescription: \"On the importance of reproducibility in data visualization.\"\ndate: \"2024-07-11\"\nmodified: now\nformat: html\nauthor: \"Jesse Onland\"\n\n---\n\n\n\n\n\n## Original Graphic\n\nOur goal is to recreate the graphic below, originally posted by [Chris Martz](https://x.com/ChrisMartzWX) on X. He says, \n\n> This plot shows the average number of days per year with daily maximum temperatures ≥95°, ≥100° and ≥105° per USHCN station since 1895. The trend is down.\n\n![Original data graphic](original.jpg)\n\n## Data Visualization Reproducibility\n\n_Reproducibility_ refers to a set of practices which ensure that a data product can be recreated by someone other than its author(s) in order to verify it. This concept applies as well to data visualization as it does to statistical analyses and machine learning models. A reproducible data graphic allows its audience to verify that the story it tells is truthful.\n\nUnfortunately, the graphic above is not very reproducible. That's because it's unclear exactly how it was created and thus it's unclear exactly what it _means_. It includes a note about the data source, but the provided URL doesn't link to a specific data set. The graphic doesn't indicate what software was used to make it, let alone include code we could use to generate an exact copy of it.\n\nWe'll have to do our best to recreate it \"by hand\".\n\n## Getting the Data\n\nThe closest USHCN data set I was able to find easily is a TSV of daily maximum temperatures for weather stations in the US. First we download it and store it locally. Note that the `read_*()` and `write_*()` family of functions from `readr` can zip and unzip files automatically according to the file extensions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n\"https://iridl.ldeo.columbia.edu/SOURCES/.CDIAC/.USHCN/.daily/tmax/tmax/[T]data.tsv\" |>\n  url() |>\n  read_tsv() |>\n  write_tsv(file = \"tmax.gz\")  \n```\n:::\n\n\n\nNext we read the data into a data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n\"tmax.gz\" |>\n  read_tsv(na = \"-99\") ->\n  tmax_data\n\ntmax_data |>\n  set_names(\\(x) str_c(\"day_\", seq_along(x))) |>\n  rownames_to_column(var = \"station\") |>\n  pivot_longer(\n    cols = starts_with(\"day_\"), \n    names_to = \"day\", \n    names_prefix = \"day_\") |>\n  drop_na() |>\n  mutate(date = ymd(18490101) + days(day)) ->\n  tmax_data\n```\n:::\n\n\n\nFor each year, we need the proporations of days which were 95‒99°F, 100‒104°F, and 105°F or greater.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ntmax_data |>\n  mutate(year = year(date)) |>\n  filter(year > 1894) |>\n  select(year, value) |>\n  group_by(year) |>\n  summarize(\n    above_95  = sum(between(value,  95,  99))/n(),\n    above_100 = sum(between(value, 100, 104))/n(),\n    above_105 = sum(value >= 105)/n()) |>\n  pivot_longer(starts_with(\"above_\"), names_to = \"temp_threshold\") |>\n  mutate(\n    temp_threshold = fct_relevel(temp_threshold, \"above_95\", \"above_100\")) ->\n  tmax_data_thresholded\n```\n:::\n\n\n\n\n\n## Our Graphic\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmax_data_thresholded |>\n  ggplot(aes(x = year, y = value, fill = temp_threshold)) +\n  geom_col(position = position_stack(), width = 0.8) +\n  scale_x_continuous(\n    expand = c(0, 0), \n    breaks = seq(1900, 2020, 20),\n    labels = as.character(seq(1900, 2020, 20))) +\n  scale_y_continuous(\n    breaks = seq(0, 0.1, 0.01),\n    labels = as.character(0:10),\n    expand = c(0, 0)) +\n  scale_fill_manual(\n    values = c(\n      \"above_95\" = \"#fe7b4b\",\n      \"above_100\" = \"#b02320\",\n      \"above_105\" = \"#000000\"),\n    labels = paste0(\"Days ≥\", seq(95, 105, 5), \"°F\")) +\n  labs(\n    title = \"U.S. Observed Number of Very Hot Days Per Year 1895 to 2014\",\n    caption = \"Data source: U.S. Historical Climatology Network\",\n    y = \"Percent of Station-Days\") +\n  theme_bw(base_size = 24) +\n  theme(\n    aspect.ratio = 3/4,\n    text = element_text(family = \"Tinos\"),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),\n    legend.position = \"inside\",\n    legend.position.inside = c(0.85, 0.8),\n    legend.title = element_blank(),\n    legend.background = element_rect(fill = NA),\n    panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](hot_days_files/figure-html/our-graphic-1.png){width=786px}\n:::\n:::\n\n\n\n## Remarks\n\nThere are some differences between our graphic and the original. For example, the most recent year included in the data we used is 2014, not 2023. Additionally, our vertical axis runs from 0% to 9% of station-days, whereas the original's is from 0% to 6% of days.^[It's not clear whether or how the original author transformed the data from station-days to days.] The original title suggests that data from weather stations in Alaska and Hawaii have been excluded; we have not done this for our graphic.\n\nWhile our graphic is not a perfect match for the original, we have nevertheless verified the claim that the (linear) trend in the proportion of very hot days in the United States has been downward since the end of the 19th century, despite the overall increase in the global temperature during that time.^[The linear trend can be added to the graphic with `geom_smooth(method = \"lm\").`]\n\nContext provided by an expert could be important here. A climatologist might be able to tell us whether this linear trend is important or useful, or whether we should try to control for any possible correlation in the changing distribution of American weather stations and average daily maximum temperatures. But one doesn't need expert knowledge on, or even a basic understanding of, a data graphic's subject matter in order to benefit from reproducing it. We can be assured that a successfully reproduced graphic isn't lying, even if we aren't sure exactly what it's saying.",
    "supporting": [
      "hot_days_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}