"0","#| label: data-preparation"
"0","#| message: false"
"0",""
"0","# read the JSON file, convert to data frame, and unnest some columns"
"0","read_json(list.files()[grep("".jscor"", list.files())], simplifyVector = TRUE) |>"
"0","  as.data.frame() |>"
"0","  unnest(cols = c(games_attributes.sixths_attributes,"
"0","                  games_attributes.final_attributes),"
"0","         names_repair = ""universal"") |>"
"0","  # keep only the columns we need, add a round indicator, pivot to one row per"
"0","  # clue instead of per category, and calculate each clue's contribution to the"
"0","  # Coryat score"
"0","  select(2, 10:14) |>"
"0","  mutate(round = rep(c(rep(1, 6), rep(2, 6)), n()/12)) |>"
"0","  pivot_longer(cols = 2:6, names_to = ""clue"", names_prefix = ""result"") |>"
"0","  rename(result = value) |>"
"0","  mutate(result = recode(result, `1` = -1, `3` = 1, `7` = 1, .default = 0),"
"0","         score = round * as.numeric(clue) * 200 * result) |>"
"0","  # group by game, add up the total score, sort by game order, and throw away"
"0","  # the timestamps"
"0","  group_by(games_attributes.date_played) |>"
"0","  summarize(sum(score)) |>"
"0","  arrange(1) |>"
"0","  mutate(game = row_number()) |>"
"0","  select(-1) |>"
"0","  rename(score = `sum(score)`) ->"
"0","  # store the results"
"0","  coryat_scores"
